//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("user25Model", "FK_Activity_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Event), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Activity), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Activity_Moderator", "Moderator", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Moderator), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Activity), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Activity_Participant", "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Participant), "Activity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Activity), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Event_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.City), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Event), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Jury_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Country), "Jury", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Jury), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Moderator_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Country), "Moderator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Moderator), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Organizer_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Country), "Organizer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Organizer), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Participant_Country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Country), "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Participant), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Jury_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Direction), "Jury", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Jury), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Moderator_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Direction), "Moderator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Moderator), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Event_Organizer", "Organizer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SessiyaOneZininaMatveeva.Model.Organizer), "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Event), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_EventParticipant_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Event), "EventParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.EventParticipant), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Moderator_Event", "Event", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SessiyaOneZininaMatveeva.Model.Event), "Moderator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Moderator), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_EventParticipant_Participant", "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Participant), "EventParticipant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.EventParticipant), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Moderator_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Gender), "Moderator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Moderator), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Organizer_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Gender), "Organizer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Organizer), true)]
[assembly: EdmRelationshipAttribute("user25Model", "FK_Participant_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SessiyaOneZininaMatveeva.Model.Gender), "Participant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SessiyaOneZininaMatveeva.Model.Participant), true)]

#endregion

namespace SessiyaOneZininaMatveeva.Model
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class user25Entities1 : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект user25Entities1, используя строку соединения из раздела "user25Entities1" файла конфигурации приложения.
        /// </summary>
        public user25Entities1() : base("name=user25Entities1", "user25Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта user25Entities1.
        /// </summary>
        public user25Entities1(string connectionString) : base(connectionString, "user25Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта user25Entities1.
        /// </summary>
        public user25Entities1(EntityConnection connection) : base(connection, "user25Entities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Activity> Activity
        {
            get
            {
                if ((_Activity == null))
                {
                    _Activity = base.CreateObjectSet<Activity>("Activity");
                }
                return _Activity;
            }
        }
        private ObjectSet<Activity> _Activity;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<City> City
        {
            get
            {
                if ((_City == null))
                {
                    _City = base.CreateObjectSet<City>("City");
                }
                return _City;
            }
        }
        private ObjectSet<City> _City;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Direction> Direction
        {
            get
            {
                if ((_Direction == null))
                {
                    _Direction = base.CreateObjectSet<Direction>("Direction");
                }
                return _Direction;
            }
        }
        private ObjectSet<Direction> _Direction;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Event> Event
        {
            get
            {
                if ((_Event == null))
                {
                    _Event = base.CreateObjectSet<Event>("Event");
                }
                return _Event;
            }
        }
        private ObjectSet<Event> _Event;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EventParticipant> EventParticipant
        {
            get
            {
                if ((_EventParticipant == null))
                {
                    _EventParticipant = base.CreateObjectSet<EventParticipant>("EventParticipant");
                }
                return _EventParticipant;
            }
        }
        private ObjectSet<EventParticipant> _EventParticipant;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Gender> Gender
        {
            get
            {
                if ((_Gender == null))
                {
                    _Gender = base.CreateObjectSet<Gender>("Gender");
                }
                return _Gender;
            }
        }
        private ObjectSet<Gender> _Gender;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Jury> Jury
        {
            get
            {
                if ((_Jury == null))
                {
                    _Jury = base.CreateObjectSet<Jury>("Jury");
                }
                return _Jury;
            }
        }
        private ObjectSet<Jury> _Jury;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Moderator> Moderator
        {
            get
            {
                if ((_Moderator == null))
                {
                    _Moderator = base.CreateObjectSet<Moderator>("Moderator");
                }
                return _Moderator;
            }
        }
        private ObjectSet<Moderator> _Moderator;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Organizer> Organizer
        {
            get
            {
                if ((_Organizer == null))
                {
                    _Organizer = base.CreateObjectSet<Organizer>("Organizer");
                }
                return _Organizer;
            }
        }
        private ObjectSet<Organizer> _Organizer;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Participant> Participant
        {
            get
            {
                if ((_Participant == null))
                {
                    _Participant = base.CreateObjectSet<Participant>("Participant");
                }
                return _Participant;
            }
        }
        private ObjectSet<Participant> _Participant;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Activity. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToActivity(Activity activity)
        {
            base.AddObject("Activity", activity);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet City. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCity(City city)
        {
            base.AddObject("City", city);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Country. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Direction. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDirection(Direction direction)
        {
            base.AddObject("Direction", direction);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Event. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEvent(Event @event)
        {
            base.AddObject("Event", @event);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EventParticipant. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEventParticipant(EventParticipant eventParticipant)
        {
            base.AddObject("EventParticipant", eventParticipant);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Gender. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGender(Gender gender)
        {
            base.AddObject("Gender", gender);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Jury. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToJury(Jury jury)
        {
            base.AddObject("Jury", jury);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Moderator. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToModerator(Moderator moderator)
        {
            base.AddObject("Moderator", moderator);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Organizer. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOrganizer(Organizer organizer)
        {
            base.AddObject("Organizer", organizer);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Participant. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToParticipant(Participant participant)
        {
            base.AddObject("Participant", participant);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Activity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Activity : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Activity.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="idEvent">Исходное значение свойства IdEvent.</param>
        /// <param name="dateStart">Исходное значение свойства DateStart.</param>
        /// <param name="activ">Исходное значение свойства Activ.</param>
        /// <param name="day">Исходное значение свойства Day.</param>
        /// <param name="timeStart">Исходное значение свойства TimeStart.</param>
        /// <param name="idModerator">Исходное значение свойства IdModerator.</param>
        /// <param name="idWinner">Исходное значение свойства IdWinner.</param>
        public static Activity CreateActivity(global::System.Int32 id, global::System.Int32 idEvent, global::System.DateTime dateStart, global::System.String activ, global::System.Int32 day, global::System.TimeSpan timeStart, global::System.Int32 idModerator, global::System.Int32 idWinner)
        {
            Activity activity = new Activity();
            activity.Id = id;
            activity.IdEvent = idEvent;
            activity.DateStart = dateStart;
            activity.Activ = activ;
            activity.Day = day;
            activity.TimeStart = timeStart;
            activity.IdModerator = idModerator;
            activity.IdWinner = idWinner;
            return activity;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdEvent
        {
            get
            {
                return _IdEvent;
            }
            set
            {
                OnIdEventChanging(value);
                ReportPropertyChanging("IdEvent");
                _IdEvent = StructuralObject.SetValidValue(value, "IdEvent");
                ReportPropertyChanged("IdEvent");
                OnIdEventChanged();
            }
        }
        private global::System.Int32 _IdEvent;
        partial void OnIdEventChanging(global::System.Int32 value);
        partial void OnIdEventChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value, "DateStart");
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private global::System.DateTime _DateStart;
        partial void OnDateStartChanging(global::System.DateTime value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Activ
        {
            get
            {
                return _Activ;
            }
            set
            {
                OnActivChanging(value);
                ReportPropertyChanging("Activ");
                _Activ = StructuralObject.SetValidValue(value, false, "Activ");
                ReportPropertyChanged("Activ");
                OnActivChanged();
            }
        }
        private global::System.String _Activ;
        partial void OnActivChanging(global::System.String value);
        partial void OnActivChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value, "Day");
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private global::System.Int32 _Day;
        partial void OnDayChanging(global::System.Int32 value);
        partial void OnDayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan TimeStart
        {
            get
            {
                return _TimeStart;
            }
            set
            {
                OnTimeStartChanging(value);
                ReportPropertyChanging("TimeStart");
                _TimeStart = StructuralObject.SetValidValue(value, "TimeStart");
                ReportPropertyChanged("TimeStart");
                OnTimeStartChanged();
            }
        }
        private global::System.TimeSpan _TimeStart;
        partial void OnTimeStartChanging(global::System.TimeSpan value);
        partial void OnTimeStartChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdModerator
        {
            get
            {
                return _IdModerator;
            }
            set
            {
                OnIdModeratorChanging(value);
                ReportPropertyChanging("IdModerator");
                _IdModerator = StructuralObject.SetValidValue(value, "IdModerator");
                ReportPropertyChanged("IdModerator");
                OnIdModeratorChanged();
            }
        }
        private global::System.Int32 _IdModerator;
        partial void OnIdModeratorChanging(global::System.Int32 value);
        partial void OnIdModeratorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdWinner
        {
            get
            {
                return _IdWinner;
            }
            set
            {
                OnIdWinnerChanging(value);
                ReportPropertyChanging("IdWinner");
                _IdWinner = StructuralObject.SetValidValue(value, "IdWinner");
                ReportPropertyChanged("IdWinner");
                OnIdWinnerChanged();
            }
        }
        private global::System.Int32 _IdWinner;
        partial void OnIdWinnerChanging(global::System.Int32 value);
        partial void OnIdWinnerChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Activity_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_Activity_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_Activity_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_Activity_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("user25Model.FK_Activity_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Activity_Moderator", "Moderator")]
        public Moderator Moderator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Moderator>("user25Model.FK_Activity_Moderator", "Moderator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Moderator>("user25Model.FK_Activity_Moderator", "Moderator").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Moderator> ModeratorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Moderator>("user25Model.FK_Activity_Moderator", "Moderator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Moderator>("user25Model.FK_Activity_Moderator", "Moderator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Activity_Participant", "Participant")]
        public Participant Participant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("user25Model.FK_Activity_Participant", "Participant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("user25Model.FK_Activity_Participant", "Participant").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Participant> ParticipantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("user25Model.FK_Activity_Participant", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Participant>("user25Model.FK_Activity_Participant", "Participant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта City.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static City CreateCity(global::System.Int32 id, global::System.String name)
        {
            City city = new City();
            city.Id = id;
            city.Name = name;
            return city;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Event_City", "Event")]
        public EntityCollection<Event> Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("user25Model.FK_Event_City", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("user25Model.FK_Event_City", "Event", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Country.
        /// </summary>
        /// <param name="code">Исходное значение свойства Code.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="englishName">Исходное значение свойства EnglishName.</param>
        /// <param name="letterCode">Исходное значение свойства LetterCode.</param>
        public static Country CreateCountry(global::System.Int32 code, global::System.String name, global::System.String englishName, global::System.String letterCode)
        {
            Country country = new Country();
            country.Code = code;
            country.Name = name;
            country.EnglishName = englishName;
            country.LetterCode = letterCode;
            return country;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value, "Code");
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.Int32 _Code;
        partial void OnCodeChanging(global::System.Int32 value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EnglishName
        {
            get
            {
                return _EnglishName;
            }
            set
            {
                OnEnglishNameChanging(value);
                ReportPropertyChanging("EnglishName");
                _EnglishName = StructuralObject.SetValidValue(value, false, "EnglishName");
                ReportPropertyChanged("EnglishName");
                OnEnglishNameChanged();
            }
        }
        private global::System.String _EnglishName;
        partial void OnEnglishNameChanging(global::System.String value);
        partial void OnEnglishNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LetterCode
        {
            get
            {
                return _LetterCode;
            }
            set
            {
                OnLetterCodeChanging(value);
                ReportPropertyChanging("LetterCode");
                _LetterCode = StructuralObject.SetValidValue(value, false, "LetterCode");
                ReportPropertyChanged("LetterCode");
                OnLetterCodeChanged();
            }
        }
        private global::System.String _LetterCode;
        partial void OnLetterCodeChanging(global::System.String value);
        partial void OnLetterCodeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Jury_Country", "Jury")]
        public EntityCollection<Jury> Jury
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Jury>("user25Model.FK_Jury_Country", "Jury");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Jury>("user25Model.FK_Jury_Country", "Jury", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Moderator_Country", "Moderator")]
        public EntityCollection<Moderator> Moderator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Moderator>("user25Model.FK_Moderator_Country", "Moderator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Moderator>("user25Model.FK_Moderator_Country", "Moderator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Organizer_Country", "Organizer")]
        public EntityCollection<Organizer> Organizer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organizer>("user25Model.FK_Organizer_Country", "Organizer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organizer>("user25Model.FK_Organizer_Country", "Organizer", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Participant_Country", "Participant")]
        public EntityCollection<Participant> Participant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Participant>("user25Model.FK_Participant_Country", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Participant>("user25Model.FK_Participant_Country", "Participant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Direction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Direction : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Direction.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Direction CreateDirection(global::System.Int32 id, global::System.String name)
        {
            Direction direction = new Direction();
            direction.Id = id;
            direction.Name = name;
            return direction;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Jury_Direction", "Jury")]
        public EntityCollection<Jury> Jury
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Jury>("user25Model.FK_Jury_Direction", "Jury");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Jury>("user25Model.FK_Jury_Direction", "Jury", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Moderator_Direction", "Moderator")]
        public EntityCollection<Moderator> Moderator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Moderator>("user25Model.FK_Moderator_Direction", "Moderator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Moderator>("user25Model.FK_Moderator_Direction", "Moderator", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Event")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Event.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="days">Исходное значение свойства Days.</param>
        /// <param name="cityId">Исходное значение свойства CityId.</param>
        public static Event CreateEvent(global::System.Int32 id, global::System.String name, global::System.DateTime date, global::System.Int32 days, global::System.Int32 cityId)
        {
            Event @event = new Event();
            @event.Id = id;
            @event.Name = name;
            @event.Date = date;
            @event.Days = days;
            @event.CityId = cityId;
            return @event;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Days
        {
            get
            {
                return _Days;
            }
            set
            {
                OnDaysChanging(value);
                ReportPropertyChanging("Days");
                _Days = StructuralObject.SetValidValue(value, "Days");
                ReportPropertyChanged("Days");
                OnDaysChanged();
            }
        }
        private global::System.Int32 _Days;
        partial void OnDaysChanging(global::System.Int32 value);
        partial void OnDaysChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value, "CityId");
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrganizerId
        {
            get
            {
                return _OrganizerId;
            }
            set
            {
                OnOrganizerIdChanging(value);
                ReportPropertyChanging("OrganizerId");
                _OrganizerId = StructuralObject.SetValidValue(value, "OrganizerId");
                ReportPropertyChanged("OrganizerId");
                OnOrganizerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OrganizerId;
        partial void OnOrganizerIdChanging(Nullable<global::System.Int32> value);
        partial void OnOrganizerIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Activity_Event", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("user25Model.FK_Activity_Event", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("user25Model.FK_Activity_Event", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Event_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("user25Model.FK_Event_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("user25Model.FK_Event_City", "City").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("user25Model.FK_Event_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("user25Model.FK_Event_City", "City", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Event_Organizer", "Organizer")]
        public Organizer Organizer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organizer>("user25Model.FK_Event_Organizer", "Organizer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organizer>("user25Model.FK_Event_Organizer", "Organizer").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organizer> OrganizerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organizer>("user25Model.FK_Event_Organizer", "Organizer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organizer>("user25Model.FK_Event_Organizer", "Organizer", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_EventParticipant_Event", "EventParticipant")]
        public EntityCollection<EventParticipant> EventParticipant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventParticipant>("user25Model.FK_EventParticipant_Event", "EventParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventParticipant>("user25Model.FK_EventParticipant_Event", "EventParticipant", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Moderator_Event", "Moderator")]
        public EntityCollection<Moderator> Moderator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Moderator>("user25Model.FK_Moderator_Event", "Moderator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Moderator>("user25Model.FK_Moderator_Event", "Moderator", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="EventParticipant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventParticipant : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EventParticipant.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="eventId">Исходное значение свойства EventId.</param>
        /// <param name="participantId">Исходное значение свойства ParticipantId.</param>
        public static EventParticipant CreateEventParticipant(global::System.Int32 id, global::System.Int32 eventId, global::System.Int32 participantId)
        {
            EventParticipant eventParticipant = new EventParticipant();
            eventParticipant.Id = id;
            eventParticipant.EventId = eventId;
            eventParticipant.ParticipantId = participantId;
            return eventParticipant;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value, "EventId");
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private global::System.Int32 _EventId;
        partial void OnEventIdChanging(global::System.Int32 value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParticipantId
        {
            get
            {
                return _ParticipantId;
            }
            set
            {
                OnParticipantIdChanging(value);
                ReportPropertyChanging("ParticipantId");
                _ParticipantId = StructuralObject.SetValidValue(value, "ParticipantId");
                ReportPropertyChanged("ParticipantId");
                OnParticipantIdChanged();
            }
        }
        private global::System.Int32 _ParticipantId;
        partial void OnParticipantIdChanging(global::System.Int32 value);
        partial void OnParticipantIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_EventParticipant_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_EventParticipant_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_EventParticipant_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_EventParticipant_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("user25Model.FK_EventParticipant_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_EventParticipant_Participant", "Participant")]
        public Participant Participant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("user25Model.FK_EventParticipant_Participant", "Participant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("user25Model.FK_EventParticipant_Participant", "Participant").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Participant> ParticipantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Participant>("user25Model.FK_EventParticipant_Participant", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Participant>("user25Model.FK_EventParticipant_Participant", "Participant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gender : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Gender.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        public static Gender CreateGender(global::System.Int32 id, global::System.String name)
        {
            Gender gender = new Gender();
            gender.Id = id;
            gender.Name = name;
            return gender;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Moderator_Gender", "Moderator")]
        public EntityCollection<Moderator> Moderator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Moderator>("user25Model.FK_Moderator_Gender", "Moderator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Moderator>("user25Model.FK_Moderator_Gender", "Moderator", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Organizer_Gender", "Organizer")]
        public EntityCollection<Organizer> Organizer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organizer>("user25Model.FK_Organizer_Gender", "Organizer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organizer>("user25Model.FK_Organizer_Gender", "Organizer", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Participant_Gender", "Participant")]
        public EntityCollection<Participant> Participant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Participant>("user25Model.FK_Participant_Gender", "Participant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Participant>("user25Model.FK_Participant_Gender", "Participant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Jury")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Jury : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Jury.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="email">Исходное значение свойства Email.</param>
        /// <param name="dateOfBirth">Исходное значение свойства DateOfBirth.</param>
        /// <param name="countryId">Исходное значение свойства CountryId.</param>
        /// <param name="phone">Исходное значение свойства Phone.</param>
        /// <param name="directionId">Исходное значение свойства DirectionId.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        public static Jury CreateJury(global::System.Int32 id, global::System.String email, global::System.DateTime dateOfBirth, global::System.Int32 countryId, global::System.String phone, global::System.Int32 directionId, global::System.String password)
        {
            Jury jury = new Jury();
            jury.Id = id;
            jury.Email = email;
            jury.DateOfBirth = dateOfBirth;
            jury.CountryId = countryId;
            jury.Phone = phone;
            jury.DirectionId = directionId;
            jury.Password = password;
            return jury;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value, "DateOfBirth");
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionId
        {
            get
            {
                return _DirectionId;
            }
            set
            {
                OnDirectionIdChanging(value);
                ReportPropertyChanging("DirectionId");
                _DirectionId = StructuralObject.SetValidValue(value, "DirectionId");
                ReportPropertyChanged("DirectionId");
                OnDirectionIdChanged();
            }
        }
        private global::System.Int32 _DirectionId;
        partial void OnDirectionIdChanging(global::System.Int32 value);
        partial void OnDirectionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Photo
        {
            get
            {
                return _Photo;
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.String _Photo;
        partial void OnPhotoChanging(global::System.String value);
        partial void OnPhotoChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Jury_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Jury_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Jury_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Jury_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("user25Model.FK_Jury_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Jury_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("user25Model.FK_Jury_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("user25Model.FK_Jury_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("user25Model.FK_Jury_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("user25Model.FK_Jury_Direction", "Direction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Moderator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Moderator : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Moderator.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="lastname">Исходное значение свойства Lastname.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="surname">Исходное значение свойства Surname.</param>
        /// <param name="genderId">Исходное значение свойства GenderId.</param>
        /// <param name="email">Исходное значение свойства Email.</param>
        /// <param name="dateOfBirth">Исходное значение свойства DateOfBirth.</param>
        /// <param name="countryId">Исходное значение свойства CountryId.</param>
        /// <param name="phone">Исходное значение свойства Phone.</param>
        /// <param name="directionId">Исходное значение свойства DirectionId.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        public static Moderator CreateModerator(global::System.Int32 id, global::System.String lastname, global::System.String name, global::System.String surname, global::System.Int32 genderId, global::System.String email, global::System.DateTime dateOfBirth, global::System.Int32 countryId, global::System.String phone, global::System.Int32 directionId, global::System.String password)
        {
            Moderator moderator = new Moderator();
            moderator.Id = id;
            moderator.Lastname = lastname;
            moderator.Name = name;
            moderator.Surname = surname;
            moderator.GenderId = genderId;
            moderator.Email = email;
            moderator.DateOfBirth = dateOfBirth;
            moderator.CountryId = countryId;
            moderator.Phone = phone;
            moderator.DirectionId = directionId;
            moderator.Password = password;
            return moderator;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false, "Lastname");
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                OnGenderIdChanging(value);
                ReportPropertyChanging("GenderId");
                _GenderId = StructuralObject.SetValidValue(value, "GenderId");
                ReportPropertyChanged("GenderId");
                OnGenderIdChanged();
            }
        }
        private global::System.Int32 _GenderId;
        partial void OnGenderIdChanging(global::System.Int32 value);
        partial void OnGenderIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value, "DateOfBirth");
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionId
        {
            get
            {
                return _DirectionId;
            }
            set
            {
                OnDirectionIdChanging(value);
                ReportPropertyChanging("DirectionId");
                _DirectionId = StructuralObject.SetValidValue(value, "DirectionId");
                ReportPropertyChanged("DirectionId");
                OnDirectionIdChanged();
            }
        }
        private global::System.Int32 _DirectionId;
        partial void OnDirectionIdChanging(global::System.Int32 value);
        partial void OnDirectionIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventId
        {
            get
            {
                return _EventId;
            }
            set
            {
                OnEventIdChanging(value);
                ReportPropertyChanging("EventId");
                _EventId = StructuralObject.SetValidValue(value, "EventId");
                ReportPropertyChanged("EventId");
                OnEventIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EventId;
        partial void OnEventIdChanging(Nullable<global::System.Int32> value);
        partial void OnEventIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Photo
        {
            get
            {
                return _Photo;
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.String _Photo;
        partial void OnPhotoChanging(global::System.String value);
        partial void OnPhotoChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Activity_Moderator", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("user25Model.FK_Activity_Moderator", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("user25Model.FK_Activity_Moderator", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Moderator_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Moderator_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Moderator_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Moderator_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("user25Model.FK_Moderator_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Moderator_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("user25Model.FK_Moderator_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("user25Model.FK_Moderator_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("user25Model.FK_Moderator_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("user25Model.FK_Moderator_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Moderator_Event", "Event")]
        public Event Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_Moderator_Event", "Event").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_Moderator_Event", "Event").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Event> EventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Event>("user25Model.FK_Moderator_Event", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Event>("user25Model.FK_Moderator_Event", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Moderator_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Moderator_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Moderator_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Moderator_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("user25Model.FK_Moderator_Gender", "Gender", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Organizer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organizer : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Organizer.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="lastname">Исходное значение свойства Lastname.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="surname">Исходное значение свойства Surname.</param>
        /// <param name="email">Исходное значение свойства Email.</param>
        /// <param name="dateOfBirth">Исходное значение свойства DateOfBirth.</param>
        /// <param name="countryId">Исходное значение свойства CountryId.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        /// <param name="genderId">Исходное значение свойства GenderId.</param>
        public static Organizer CreateOrganizer(global::System.Int32 id, global::System.String lastname, global::System.String name, global::System.String surname, global::System.String email, global::System.DateTime dateOfBirth, global::System.Int32 countryId, global::System.String password, global::System.Int32 genderId)
        {
            Organizer organizer = new Organizer();
            organizer.Id = id;
            organizer.Lastname = lastname;
            organizer.Name = name;
            organizer.Surname = surname;
            organizer.Email = email;
            organizer.DateOfBirth = dateOfBirth;
            organizer.CountryId = countryId;
            organizer.Password = password;
            organizer.GenderId = genderId;
            return organizer;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false, "Lastname");
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value, "DateOfBirth");
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Photo
        {
            get
            {
                return _Photo;
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.String _Photo;
        partial void OnPhotoChanging(global::System.String value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                OnGenderIdChanging(value);
                ReportPropertyChanging("GenderId");
                _GenderId = StructuralObject.SetValidValue(value, "GenderId");
                ReportPropertyChanged("GenderId");
                OnGenderIdChanged();
            }
        }
        private global::System.Int32 _GenderId;
        partial void OnGenderIdChanging(global::System.Int32 value);
        partial void OnGenderIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Organizer_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Organizer_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Organizer_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Organizer_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("user25Model.FK_Organizer_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Event_Organizer", "Event")]
        public EntityCollection<Event> Event
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event>("user25Model.FK_Event_Organizer", "Event");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event>("user25Model.FK_Event_Organizer", "Event", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Organizer_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Organizer_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Organizer_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Organizer_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("user25Model.FK_Organizer_Gender", "Gender", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="user25Model", Name="Participant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Participant : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Participant.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="lastname">Исходное значение свойства Lastname.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="surname">Исходное значение свойства Surname.</param>
        /// <param name="email">Исходное значение свойства Email.</param>
        /// <param name="dateOfBirth">Исходное значение свойства DateOfBirth.</param>
        /// <param name="countryId">Исходное значение свойства CountryId.</param>
        /// <param name="phone">Исходное значение свойства Phone.</param>
        /// <param name="password">Исходное значение свойства Password.</param>
        /// <param name="genderId">Исходное значение свойства GenderId.</param>
        public static Participant CreateParticipant(global::System.Int32 id, global::System.String lastname, global::System.String name, global::System.String surname, global::System.String email, global::System.DateTime dateOfBirth, global::System.Int32 countryId, global::System.String phone, global::System.String password, global::System.Int32 genderId)
        {
            Participant participant = new Participant();
            participant.Id = id;
            participant.Lastname = lastname;
            participant.Name = name;
            participant.Surname = surname;
            participant.Email = email;
            participant.DateOfBirth = dateOfBirth;
            participant.CountryId = countryId;
            participant.Phone = phone;
            participant.Password = password;
            participant.GenderId = genderId;
            return participant;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lastname
        {
            get
            {
                return _Lastname;
            }
            set
            {
                OnLastnameChanging(value);
                ReportPropertyChanging("Lastname");
                _Lastname = StructuralObject.SetValidValue(value, false, "Lastname");
                ReportPropertyChanged("Lastname");
                OnLastnameChanged();
            }
        }
        private global::System.String _Lastname;
        partial void OnLastnameChanging(global::System.String value);
        partial void OnLastnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false, "Surname");
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value, "DateOfBirth");
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value, "CountryId");
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Photo
        {
            get
            {
                return _Photo;
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.String _Photo;
        partial void OnPhotoChanging(global::System.String value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                OnGenderIdChanging(value);
                ReportPropertyChanging("GenderId");
                _GenderId = StructuralObject.SetValidValue(value, "GenderId");
                ReportPropertyChanged("GenderId");
                OnGenderIdChanged();
            }
        }
        private global::System.Int32 _GenderId;
        partial void OnGenderIdChanging(global::System.Int32 value);
        partial void OnGenderIdChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Activity_Participant", "Activity")]
        public EntityCollection<Activity> Activity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Activity>("user25Model.FK_Activity_Participant", "Activity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Activity>("user25Model.FK_Activity_Participant", "Activity", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Participant_Country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Participant_Country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Participant_Country", "Country").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("user25Model.FK_Participant_Country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("user25Model.FK_Participant_Country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_EventParticipant_Participant", "EventParticipant")]
        public EntityCollection<EventParticipant> EventParticipant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EventParticipant>("user25Model.FK_EventParticipant_Participant", "EventParticipant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EventParticipant>("user25Model.FK_EventParticipant_Participant", "EventParticipant", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("user25Model", "FK_Participant_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Participant_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Participant_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("user25Model.FK_Participant_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("user25Model.FK_Participant_Gender", "Gender", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
